trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  major: 1
  minor: 1
  patch: $[counter(variables['minor'], 0)] # Resets when 'minor' is bumped
  NugetVersion: $(major).$(minor).$(patch)

jobs:
  - job: Setup
    displayName: 'Setup Environment'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK 7.x'
        inputs:
          version: '7.x'
  
      - task: NodeTool@0
        displayName: 'Install Node.js'
        inputs:
          versionSpec: '18.x'
  
      - task: NuGetToolInstaller@1
        displayName: 'Install NuGet'

  - job: RestoreAndBuild
    displayName: 'Restore and Build Projects'
    steps:
      - task: NuGetCommand@2
        displayName: 'NuGet Restore'
        inputs:
          restoreSolution: '**/*.sln'

      - task: PowerShell@2
        displayName: 'NuGet Clear Cache'
        inputs:
          targetType: 'inline'
          script: 'dotnet nuget locals all --clear'

      - task: DotNetCoreCLI@2
        displayName: '.NET Restore'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: '.NET Build WebUI'
        inputs:
          command: 'build'
          projects: '**/AutoHelper.WebUI.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: '.NET Build Hangfire'
        inputs:
          command: 'build'
          projects: '**/AutoHelper.Hangfire.Dashboard.csproj'
          arguments: '--configuration $(buildConfiguration)'
      
  - job: Publish
    displayName: 'Publish Projects'
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Publish WebUI'
        inputs:
          command: 'publish'
          projects: '**/AutoHelper.WebUI.csproj'
          publishWebProjects: false
          arguments: '--configuration $(buildConfiguration) -r linux-x64 --self-contained --output $(Build.ArtifactStagingDirectory)/WebUI'

      - task: PowerShell@2
        displayName: 'Rename WebUI Zip File'
        inputs:
          targetType: 'inline'
          script: 'Rename-Item -Path "$(Build.ArtifactStagingDirectory)/WebUI/WebUI.zip" -NewName "AutoHelper.WebUI.zip"'

      - task: DotNetCoreCLI@2
        displayName: 'Publish Hangfire'
        inputs:
          command: 'publish'
          projects: '**/AutoHelper.Hangfire.Dashboard.csproj'
          publishWebProjects: false
          arguments: '--configuration $(buildConfiguration) -r linux-x64 --self-contained --output $(Build.ArtifactStagingDirectory)/Hangfire.Dashboard'

      - task: PowerShell@2
        displayName: 'Rename Hangfire Zip File'
        inputs:
          targetType: 'inline'
          script: 'Rename-Item -Path "$(Build.ArtifactStagingDirectory)/Hangfire.Dashboard/WebUI.zip" -NewName "AutoHelper.Hangfire.Dashboard.zip"'

      - task: PublishBuildArtifacts@1
        displayName: 'Upload Artifacts'
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'drop'

  - job: Deploy
    displayName: 'Deploy to Azure'
    steps:
      - task: AzureWebApp@1
        displayName: 'Deploy to autohelper.nl'
        inputs:
          azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
          appType: 'webAppLinux'
          appName: 'autohelper-webui'
          resourceGroupName: 'AutoHelper'
          slotName: 'production'
          package: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.WebUI.zip'
          runtimeStack: 'DOTNETCORE|7.0'

      - task: AzureWebApp@1
        displayName: 'Deploy to hangfire.autohelper.nl'
        inputs:
          azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
          appType: 'webAppLinux'
          appName: 'autohelper-hangfire'
          resourceGroupName: 'AutoHelper'
          slotName: 'production'
          package: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.Hangfire.Dashboard.zip'
          runtimeStack: 'DOTNETCORE|7.0'
