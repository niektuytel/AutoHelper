trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  major: 1
  minor: 1
  patch: $[counter(variables['minor'], 0)] # Resets when 'minor' is bumped
  NugetVersion: $(major).$(minor).$(patch)

steps:
- task: UseDotNet@2
  inputs:
    version: '7.x'
  displayName: 'Use .NET Core SDK 7.x'

- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'
  displayName: 'Restore NuGet Packages'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'dotnet nuget locals all --clear'
  displayName: 'Clear NuGet Cache'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
  displayName: 'Restore .NET Core Projects'

- task: DotNetCoreCLI@2
  displayName: 'Build WebUI'
  inputs:
    command: 'build'
    projects: '**/AutoHelper.WebUI.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Build Hangfire'
  inputs:
    command: 'build'
    projects: '**/AutoHelper.Hangfire.Dashboard.csproj'
    arguments: '--configuration $(buildConfiguration)'

# Publish AutoHelper.WebUI
- task: DotNetCoreCLI@2
  displayName: 'Publish AutoHelper.WebUI'
  inputs:
    command: 'publish'
    projects: '**/AutoHelper.WebUI.csproj'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) -r linux-x64 --self-contained --output $(Build.ArtifactStagingDirectory)/WebUI'

# Publish AutoHelper.Hangfire.Dashboard
- task: DotNetCoreCLI@2
  displayName: 'Publish AutoHelper.Hangfire.Dashboard'
  inputs:
    command: 'publish'
    projects: '**/AutoHelper.Hangfire.Dashboard.csproj'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) -r linux-x64 --self-contained --output $(Build.ArtifactStagingDirectory)/Hangfire.Dashboard'

# Upload Artifacts
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
  displayName: 'Upload Artifacts to Drop'

# Deploy AutoHelper.WebUI to Azure Web App
- task: AzureWebApp@1
  displayName: 'Deploy to autohelper.nl'
  inputs:
    azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
    appType: 'webAppLinux'
    appName: 'autohelper-webui'
    resourceGroupName: 'AutoHelper'
    slotName: 'production'
    package: '$(Build.ArtifactStagingDirectory)/**/WebUI.zip'
    runtimeStack: 'DOTNETCORE|7.0'

# Deploy AutoHelper.Hangfire.Dashboard to Azure Web App
- task: AzureWebApp@1
  displayName: 'Deploy to hangfire.autohelper.nl'
  inputs:
    azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
    appType: 'webAppLinux'
    appName: 'autohelper-hangfire'
    resourceGroupName: 'AutoHelper'
    slotName: 'production'
    package: '$(Build.ArtifactStagingDirectory)/**/Hangfire.Dashboard.zip'
    runtimeStack: 'DOTNETCORE|7.0'
