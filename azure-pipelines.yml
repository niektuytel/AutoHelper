trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  
steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        feedsToUse: 'select'

  - task: NodeTool@0
    displayName: 'Install Node.js'
    inputs:
      versionSpec: '18.x'

  - script: dotnet build --configuration $(buildConfiguration)
    displayName: 'dotnet build $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    name: 'Tests'
    displayName: 'Run tests'
    inputs:
      command: 'test'
      projects: '$(solution)'
      arguments: '--configuration $(BuildConfiguration)'

  # - task: DotNetCoreCLI@2
  #   name: 'Publish'
  #   displayName: 'Publish'
  #   inputs:
  #     command: 'publish'
  #     publishWebProjects: true
  #     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  #     zipAfterPublish: false

  - task: PublishBuildArtifacts@1
    name: 'PublishBuildArtifacts'
    displayName: 'Create Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'LatestArtifact'
      publishLocation: 'Container'

  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
      appType: 'webAppLinux'
      appName: 'autohelper-hangfire'
      deployToSlotOrASE: true
      resourceGroupName: 'AutoHelper'
      slotName: 'production'
      package: '$(build.artifactStagingDirectory)'
      runtimeStack: 'DOTNETCORE|7.0'
      startUpCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'

  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-hangfire'
  #     deployToSlotOrASE: true
  #     ResourceGroupName: 'AutoHelper'
  #     SlotName: 'production'
  #     packageForLinux: '$(build.artifactStagingDirectory)'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'

  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-webui'
  #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.WebUI.zip'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: 'dotnet AutoHelper.WebUI.dll'
  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-hangfire'
  #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.Hangfire.Dashboard.zip'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: '
      # StartupCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'
  
  
  
  
  # - task: PublishBuildArtifacts@1
  #   name: 'PublishBuildArtifacts'
  #   displayName: 'Create Artifacts'
  #   inputs:
  #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  #     ArtifactName: 'Latest Deploy'
  #     publishLocation: 'Container'

  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-hangfire'
  #     deployToSlotOrASE: true
  #     ResourceGroupName: 'AutoHelper'
  #     SlotName: 'production'
  #     packageForLinux: '$(build.artifactStagingDirectory)'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'

  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-webui'
  #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.WebUI.zip'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: 'dotnet AutoHelper.WebUI.dll'
  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-hangfire'
  #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.Hangfire.Dashboard.zip'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: '
      # StartupCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'
  
  
  
  