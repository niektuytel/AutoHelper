trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  
steps:
  - task: NodeTool@0
    displayName: 'Install Node.js'
    inputs:
      versionSpec: '18.x'

  - task: NuGetToolInstaller@1
    displayName: 'Install NuGet'

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: PublishBuildArtifacts@1
    name: 'PublishBuildArtifacts'
    displayName: 'Create Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Latest Deploy'
      publishLocation: 'Container'

  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
      appType: 'webAppLinux'
      appName: 'autohelper-hangfire'
      deployToSlotOrASE: true
      resourceGroupName: 'AutoHelper'
      slotName: 'production'
      package: '$(Build.ArtifactStagingDirectory)'
      runtimeStack: 'DOTNETCORE|7.0'
      startUpCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'

  
  
  # - task: NuGetToolInstaller@1

  # - task: NuGetCommand@2
  #   inputs:
  #       command: 'restore'
  #       restoreSolution: '$(solution)'
  #       feedsToUse: 'select'


  # - task: DotNetCoreCLI@2
  #   name: 'Tests'
  #   displayName: 'Run tests'
  #   inputs:
  #     command: 'test'
  #     projects: '$(solution)'
  #     arguments: '--configuration $(BuildConfiguration)'

  # - script: dotnet build --configuration $(buildConfiguration)
  #   displayName: 'dotnet build $(buildConfiguration)'
    
  # # publish an artifact called drop
  # - task: PublishPipelineArtifact@1
  #   inputs:
  #     targetPath: '$(Build.ArtifactStagingDirectory)' 
  #     artifactName: drop
      
  #   # download the artifact drop from the previous job
  # - task: DownloadPipelineArtifact@2
  #   inputs:
  #     source: 'current'
  #     artifact: 'drop'
  #     path: '$(Pipeline.Workspace)'

  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-hangfire'
  #     deployToSlotOrASE: true
  #     ResourceGroupName: 'AutoHelper'
  #     SlotName: 'production'
  #     packageForLinux: '$(build.artifactStagingDirectory)'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'

  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-webui'
  #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.WebUI.zip'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: 'dotnet AutoHelper.WebUI.dll'
  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-hangfire'
  #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.Hangfire.Dashboard.zip'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: '
      # StartupCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'
  
  
  
  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-hangfire'
  #     deployToSlotOrASE: true
  #     ResourceGroupName: 'AutoHelper'
  #     SlotName: 'production'
  #     packageForLinux: '$(build.artifactStagingDirectory)'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'

  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-webui'
  #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.WebUI.zip'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: 'dotnet AutoHelper.WebUI.dll'
  # - task: AzureRmWebAppDeployment@4
  #   inputs:
  #     ConnectionType: 'AzureRM'
  #     azureSubscription: 'Niek Tuijtel(c01f95dd-b3fa-4a0e-a85c-5b68a7d4270e)'
  #     appType: 'webAppLinux'
  #     WebAppName: 'autohelper-hangfire'
  #     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/AutoHelper.Hangfire.Dashboard.zip'
  #     RuntimeStack: 'DOTNETCORE|7.0'
  #     StartupCommand: '
      # StartupCommand: 'dotnet AutoHelper.Hangfire.Dashboard.dll'
  
  
  
  